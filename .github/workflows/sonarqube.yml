name: SonarQube Analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pull-requests: read

jobs:
  analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          
          pip install -r requirements.txt

      - name: Run tests with coverage (produces coverage.xml)
        run: |
          pytest --maxfail=1 --disable-warnings -q --cov=src --cov-report=xml:coverage.xml

      - name: Start SonarQube Docker container
        run: |
          docker run -d --name sonarqube -p 9000:9000 sonarqube:latest
          sleep 30  # Wait for SonarQube to fully start

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "http://localhost:9000"

      - name: Stop SonarQube Docker container
        run: |
          docker stop sonarqube
          docker rm sonarqube
          - name: Cache dependencies
  uses: actions/cache@v4
  with:
    path: ~/.cache/pip
    key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
    restore-keys: |
      ${{ runner.os }}-python-

